from google import genai
from google.genai import types
import os, io
from PIL import Image as PILImage
from dotenv import load_dotenv

load_dotenv("../.env")

client = genai.Client(api_key=os.environ["GEMINI_API_KEY"])
MODEL="gemini-2.0-flash"
AI_INSTRUCTION_PROMPT = """
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ä‡∏∑‡πà‡∏≠ '‡πÄ‡∏ô‡πÇ‡∏Å‡∏∞' üê±
‡∏Ñ‡∏∏‡∏ì‡∏û‡∏π‡∏î‡∏à‡∏≤‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏ß‡πà‡∏≤ '‡πÄ‡∏°‡∏µ‡πä‡∏¢‡∏ß~'
‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏≤‡∏£
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π ‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏´‡∏ô‡∏ö‡πâ‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ
"""

def generate_text(text):
    response = client.models.generate_content(
        model=MODEL,
        contents=[text],
        config=types.GenerateContentConfig(
            system_instruction=AI_INSTRUCTION_PROMPT,
            max_output_tokens=200,
        ),
    )
    print(f"Gemini response: {response.text}")
    return response.text


def image_understanding(image_content):
    image_data = PILImage.open(io.BytesIO(image_content))

    prompt = "What is shown in this image in Thai?"
    response = client.models.generate_content(
        model=MODEL,
        system_instruction=AI_INSTRUCTION_PROMPT,
        contents=[prompt, image_data],
        config=types.GenerateContentConfig(
            max_output_tokens=200,
        ),
    )
    print(f"Gemini response: {response.text}")
    return response.text


def document_understanding(file_content):
    prompt = "Summarize this document in Thai"
    pdf_data = types.Part.from_bytes(data=file_content, mime_type="application/pdf")
    response = client.models.generate_content(
        model=MODEL,
        system_instruction=AI_INSTRUCTION_PROMPT,
        contents=[pdf_data,prompt],
        config=types.GenerateContentConfig(
            max_output_tokens=200,
        ),
    )
    print(f"Gemini response: {response.text}")
    return response.text
